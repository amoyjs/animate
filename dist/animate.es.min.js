/* global global, self */let root="undefined"==typeof self?"undefined"==typeof window?"undefined"==typeof global?"undefined"==typeof exports?{}:exports:global:window:self,requestAnimationFrame=root.requestAnimationFrame||(a=>root.setTimeout(a,50/3)),cancelAnimationFrame=root.cancelAnimationFrame||(a=>root.clearTimeout(a));/* global process */ /**
 * Get browser/Node.js current time-stamp
 * @return Normalised current time-stamp in milliseconds
 * @memberof TWEEN
 * @example
 * TWEEN.now
 */const now=function(){if("undefined"!=typeof process&&process.hrtime!==void 0&&(!process.versions||process.versions.electron===void 0))return function(){const a=process.hrtime();// Convert [seconds, nanoseconds] to milliseconds.
return 1e3*a[0]+a[1]/1e6};// In a browser, use window.performance.now if it is available.
if(void 0!==root.performance&&void 0!==root.performance.now)// This must be bound, because directly assigning this function
// leads to an invocation exception in Chrome.
return root.performance.now.bind(root.performance);// Use Date.now if it is available.
else{const a=root.performance&&root.performance.timing&&root.performance.timing.navigationStart?root.performance.timing.navigationStart:Date.now();return function(){return Date.now()-a}}}(),_tweens=[];/**
 * Lightweight, effecient and modular ES6 version of tween.js
 * @copyright 2019 @dalisoft and es6-tween contributors
 * @license MIT
 * @namespace TWEEN
 * @example
 * // ES6
 * const {add, remove, isRunning, autoPlay} = TWEEN
 */let isStarted=!1,_autoPlay=!1,_onRequestTick=[];const _ticker=requestAnimationFrame;let _tick,emptyFrame=0,powerModeThrottle=120,handleLag=!0;const _requestTick=()=>{for(let a=0;a<_onRequestTick.length;a++)_onRequestTick[a]()},add=a=>{let b=_tweens.indexOf(a);-1<b&&_tweens.splice(b,1),_tweens.push(a),emptyFrame=0,_autoPlay&&!isStarted&&(_tick=_ticker(update),isStarted=!0)},autoPlay=a=>{_autoPlay=a},remove=a=>{const b=_tweens.indexOf(a);-1!==b&&_tweens.splice(b,1),0===_tweens.length&&(cancelAnimationFrame(_tick),isStarted=!1)},update=(a=now(),b)=>{if(emptyFrame>=powerModeThrottle&&handleLag)return isStarted=!1,emptyFrame=0,cancelAnimationFrame(_tick),!1;_autoPlay&&isStarted?_tick=_ticker(update):_requestTick(),_tweens.length||emptyFrame++;let c=0,d=_tweens.length;for(;c<d;)_tweens[c++].update(a,b),d>_tweens.length&&c--,d=_tweens.length;return!0},isRunning=()=>isStarted,isLagSmoothing=()=>handleLag,Plugins={},Easing={Linear:{None(a){return a}},Quadratic:{In(a){return Math.pow(a,2)},Out(a){return a*(2-a)},InOut(a){var b=Math.pow;return 1>(a*=2)?.5*b(a,2):-.5*(--a*(a-2)-1)}},Cubic:{In(a){return Math.pow(a,3)},Out(a){return--a*a*a+1},InOut(a){var b=Math.pow;return 1>(a*=2)?.5*b(a,3):.5*((a-=2)*a*a+2)}},Quartic:{In(a){return Math.pow(a,4)},Out(a){return 1- --a*a*a*a},InOut(a){var b=Math.pow;return 1>(a*=2)?.5*b(a,4):-.5*((a-=2)*a*a*a-2)}},Quintic:{In(a){return Math.pow(a,5)},Out(a){return--a*a*a*a*a+1},InOut(a){var b=Math.pow;return 1>(a*=2)?.5*b(a,5):.5*((a-=2)*a*a*a*a+2)}},Sinusoidal:{In(a){return 1-Math.cos(a*Math.PI/2)},Out(a){return Math.sin(a*Math.PI/2)},InOut(a){return .5*(1-Math.cos(Math.PI*a))}},Exponential:{In(a){return 0===a?0:Math.pow(1024,a-1)},Out(a){return 1===a?1:1-Math.pow(2,-10*a)},InOut(a){var b=Math.pow;return 0===a?0:1===a?1:1>(a*=2)?.5*b(1024,a-1):.5*(-b(2,-10*(a-1))+2)}},Circular:{In(a){return 1-Math.sqrt(1-a*a)},Out(a){return Math.sqrt(1- --a*a)},InOut(a){var b=Math.sqrt;return 1>(a*=2)?-.5*(b(1-a*a)-1):.5*(b(1-(a-=2)*a)+1)}},Elastic:{In(a){return 0===a?0:1===a?1:-Math.pow(2,10*(a-1))*Math.sin(5*(a-1.1)*Math.PI)},Out(a){return 0===a?0:1===a?1:Math.pow(2,-10*a)*Math.sin(5*(a-.1)*Math.PI)+1},InOut(a){var b=Math.sin,c=Math.PI,d=Math.pow;return 0===a?0:1===a?1:(a*=2,1>a?-.5*d(2,10*(a-1))*b(5*(a-1.1)*c):.5*d(2,-10*(a-1))*b(5*(a-1.1)*c)+1)}},Back:{In(a){const b=1.70158;return a*a*((b+1)*a-b)},Out(a){const b=1.70158;return--a*a*((b+1)*a+b)+1},InOut(a){const b=1.525*1.70158;return 1>(a*=2)?.5*(a*a*((b+1)*a-b)):.5*((a-=2)*a*((b+1)*a+b)+2)}},Bounce:{In(a){return 1-Easing.Bounce.Out(1-a)},Out(a){let b=2.75,c=7.5625;return a<1/b?c*a*a:a<2/b?c*(a-=1.5/b)*a+.75:a<2.5/b?c*(a-=2.25/b)*a+.9375:c*(a-=2.625/b)*a+.984375},InOut(a){return .5>a?.5*Easing.Bounce.In(2*a):.5*Easing.Bounce.Out(2*a-1)+.5}},Stepped:{steps:a=>b=>(0|b*a)/a}},FRAME_MS=50/3,TOO_LONG_FRAME_MS=250,CHAINED_TWEENS="_chainedTweens",EVENT_CALLBACK="Callback",EVENT_UPDATE="update",EVENT_COMPLETE="complete",EVENT_START="start",EVENT_REPEAT="repeat",EVENT_REVERSE="reverse",EVENT_PAUSE="pause",EVENT_PLAY="play",EVENT_RESTART="restart",EVENT_STOP="stop",EVENT_SEEK="seek",STRING_PROP="STRING_PROP",NUM_REGEX=/\s+|([A-Za-z?().,{}:""[\]#%]+)|([-+]=+)?([-+]+)?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]=?\d+)?/g;/**
 * Adds tween to list
 * @param {Tween} tween Tween instance
 * @memberof TWEEN
 * @example
 * let tween = new Tween({x:0})
 * tween.to({x:200}, 1000)
 * TWEEN.add(tween)
 */ // Copies everything, duplicates, no shallow-copy
function deepCopy(a){if(a&&a.nodeType||a===void 0||"object"!=typeof a)return a;if(Array.isArray(a))return[].concat(a);if("object"==typeof a){let b={};for(let c in a)b[c]=deepCopy(a[c]);return b}return a}const isNaNForST=a=>isNaN(+a)||("+"===a[0]||"-"===a[0])&&"="===a[1]||""===a||" "===a,hexColor=/^#([0-9a-f]{6}|[0-9a-f]{3})$/gi,hex2rgb=(a,c)=>{let d,e,f;3===c.length&&(d=c[0],e=c[1],f=c[2],c=d+d+e+e+f+f);let h=parseInt(c,16);return d=255&h>>16,e=255&h>>8,f=255&h,"rgb("+d+", "+e+", "+f+")"};function decomposeString(a){if(a&&a.splice&&a.isString)return a;if("string"!=typeof a)return a;if("="===a.charAt(1))return a;const b=a.replace(hexColor,hex2rgb).match(NUM_REGEX).map(a=>isNaNForST(a)?a:+a);return b.isString=!0,b}// Decompose value, now for only `string` that required
function decompose(c,d,e,f){const g=e[c],h=f[c];if(g===h)return!0;if(Array.isArray(g)&&Array.isArray(h)&&g.length===h.length)for(let e=0,a=h.length;e<a;e++){const f=g[e],a=h[e];if(f===a||"number"==typeof f&&"number"==typeof a)continue;else decompose(e,d[c],g,h)}if("number"==typeof g&&"number"==typeof h);else if(g&&g.splice&&g.isString&&h&&h.splice&&h.isString);else{if("string"==typeof g&&Array.isArray(h)){const a=decomposeString(g),b=h.map(decomposeString);return e[c]=a,f[c]=b,!0}if("string"==typeof g||"string"==typeof h){let a=Array.isArray(g)&&g[0]===STRING_PROP?g:decomposeString(g),b=Array.isArray(h)&&h[0]===STRING_PROP?h:decomposeString(h);if(void 0===a)return;for(let c=1;c<a.length;)a[c]===b[c]&&"string"==typeof a[c-1]?(a.splice(c-1,2,a[c-1]+a[c]),b.splice(c-1,2,b[c-1]+b[c])):c++;return i=0,a[0]===STRING_PROP&&a.shift(),b[0]===STRING_PROP&&b.shift(),e[c]=a,f[c]=b,!0}if("object"==typeof g&&"object"==typeof h){if(Array.isArray(g)&&!g.isString)return g.map((a,b)=>decompose(b,d[c],g,h));for(let a in h)decompose(a,d[c],g,h);return!0}}return!1}// Recompose value
const RGB="rgb(",RGBA="rgba(",isRGBColor=(a,b,c=RGB)=>"number"==typeof a[b]&&(a[b-1]===c||a[b-3]===c||a[b-5]===c);function recompose(a,b,c,d,e,f,g){const h=g?c:c[a];let j=g?d:d[a];if(j===void 0)return h;if(void 0===h||"string"==typeof h||h===j)return j;if("object"==typeof h&&"object"==typeof j){if(!h||!j)return b[a];if("object"==typeof h&&!!h&&h.isString&&j&&j.splice&&j.isString){let c="";for(let a=0,b=h.length;a<b;a++)if(h[a]!==j[a]||"number"!=typeof h[a]||"number"==typeof j[a]){const b="number"==typeof h[a]&&"string"==typeof j[a]&&"="===j[a][1];let d="number"==typeof h[a]?b?h[a]+parseFloat(j[a][0]+j[a].substr(2))*e:h[a]+(j[a]-h[a])*e:h[a];(isRGBColor(h,a)||isRGBColor(h,a,RGBA))&&(d|=0),c+=d,b&&1===f&&(h[a]+=parseFloat(j[a][0]+j[a].substr(2)))}else c+=h[a];return g||(b[a]=c),c}if(Array.isArray(h)&&h[0]!==STRING_PROP)for(let c=0,d=h.length;c<d;c++)h[c]!==j[c]&&"string"!=typeof b[a]&&recompose(c,b[a],h,j,e,f);else if("object"==typeof h&&!!h&&!h.isString)for(let c in h)h[c]!==j[c]&&recompose(c,b[a],h,j,e,f)}else if("number"==typeof h){const d="string"==typeof j;b[a]=d?h+parseFloat(j[0]+j.substr(2))*e:h+(j-h)*e,d&&1===f&&(c[a]=b[a])}else"function"==typeof j&&(b[a]=j(e));return b[a]}// Dot notation => Object structure converter
// example
// {'scale.x.y.z':'VALUE'} => {scale:{x:{y:{z:'VALUE'}}}}
// Only works for 3-level parsing, after 3-level, parsing dot-notation not works as it's not affects
const propRegExp=/([.[])/g,replaceBrace=/\]/g,propExtract=function(a,b){const c=a[b],d=b.replace(replaceBrace,"").split(propRegExp),e=d.length-1;let f=Array.isArray(a),g="object"==typeof a&&!f;return g?(a[b]=null,delete a[b]):f&&a.splice(b,1),d.reduce((a,b,h)=>{f&&"."!==b&&"["!==b&&(b*=1);let j=d[h+1];if("."===b||"["===b)return"."===b?(g=!0,f=!1):"["==b&&(g=!1,f=!0),a;if(void 0===a[b]){if(f||g)return a[b]=h===e?c:f||"["===j?[]:g?{}:null,g=f=!1,a[b];}else if(void 0!==a[b])return h===e&&(a[b]=c),a[b];return a},a)},SET_NESTED=function(a){if("object"==typeof a&&!!a)for(let b in a)if(-1!==b.indexOf(".")||-1!==b.indexOf("["))propExtract(a,b);else if("object"==typeof a[b]&&!!a[b]){let c=a[b];for(let a in c)if(-1!==a.indexOf(".")||-1!==a.indexOf("["))propExtract(c,a);else if("object"==typeof c[a]&&!!c[a]){let b=c[a];for(let a in b)(-1!==a.indexOf(".")||-1!==a.indexOf("["))&&propExtract(b,a)}}return a},Interpolation={Linear(a,b,c){const d=a.length-1,e=d*b,f=Math.floor(e),g=Interpolation.Utils.Linear;return 0>b?g(a[0],a[1],e,c):1<b?g(a[d],a[d-1],d-e,c):g(a[f],a[f+1>d?d:f+1],e-f,c)},Bezier(a,c,d){let e=Interpolation.Utils.Reset(d),f=a.length-1,g=Math.pow,h=Interpolation.Utils.Bernstein,j=Array.isArray(e);for(let b=0;b<=f;b++)if("number"==typeof e)e+=g(1-c,f-b)*g(c,b)*a[b]*h(f,b);else if(j)for(let d=0,j=e.length;d<j;d++)"number"==typeof e[d]?e[d]+=g(1-c,f-b)*g(c,b)*a[b][d]*h(f,b):e[d]=a[b][d];else if("object"==typeof e)for(let d in e)"number"==typeof e[d]?e[d]+=g(1-c,f-b)*g(c,b)*a[b][d]*h(f,b):e[d]=a[b][d];else if("string"==typeof e){let b="",d=Math.round(f*c),e=a[d];for(let a=1,c=e.length;a<c;a++)b+=e[a];return b}return e},CatmullRom(a,b,c){var d=Math.floor;const e=a.length-1;let g=e*b,h=d(g);const j=Interpolation.Utils.CatmullRom;return a[0]===a[e]?(0>b&&(h=d(g=e*(1+b))),j(a[(h-1+e)%e],a[h],a[(h+1)%e],a[(h+2)%e],g-h,c)):0>b?j(a[1],a[1],a[0],a[0],-b,c):1<b?j(a[e-1],a[e-1],a[e],a[e],(0|b)-b,c):j(a[h?h-1:0],a[h],a[e<h+1?e:h+1],a[e<h+2?e:h+2],g-h,c)},Utils:{Linear(a,b,c,d){if(a===b||"string"==typeof a){// Quick return for performance reason
if(b.length&&b.splice&&b.isString){b="";for(let c=0,d=a.length;c<d;c++)b+=a[c]}return b}if("number"==typeof a)return"function"==typeof a?a(c):a+(b-a)*c;if("object"==typeof a){if(void 0!==a.length){const e="string"==typeof a[0]||a.isString;if(e||a[0]===STRING_PROP){let d="";for(let f,g=e?0:1,h=a.length;g<h;g++)f=0===c?a[g]:1===c?b[g]:"number"==typeof a[g]?a[g]+(b[g]-a[g])*c:b[g],(0<c&&1>c&&isRGBColor(a,g)||isRGBColor(a,g,RGBA))&&(f|=0),d+=f;return d}if(d&&d.length&&d.splice)for(let e=0,f=d.length;e<f;e++)d[e]=Interpolation.Utils.Linear(a[e],b[e],c,d[e])}else for(const e in d)d[e]=Interpolation.Utils.Linear(a[e],b[e],c,d[e]);return d}},Reset(a){if(Array.isArray(a)){for(let b=0,c=a.length;b<c;b++)a[b]=Interpolation.Utils.Reset(a[b]);return a}if("object"==typeof a){for(let b in a)a[b]=Interpolation.Utils.Reset(a[b]);return a}return"number"==typeof a?0:a},Bernstein(a,b){const c=Interpolation.Utils.Factorial;return c(a)/c(b)/c(a-b)},Factorial:function(){const b=[1];return a=>{let c=1;if(b[a])return b[a];for(let b=a;1<b;b--)c*=b;return b[a]=c,c}}(),CatmullRom(a,b,c,d,e,f){if("string"==typeof a)return b;if("number"==typeof a){const f=.5*(c-a),g=.5*(d-b),h=e*e;return(2*b-2*c+f+g)*(e*h)+(-3*b+3*c-2*f-g)*h+f*e+b}if("object"==typeof a){if(void 0!==a.length){if(a[0]===STRING_PROP){let f="";for(let g,h=1,j=a.length;h<j;h++)g="number"==typeof a[h]?Interpolation.Utils.CatmullRom(a[h],b[h],c[h],d[h],e):d[h],(isRGBColor(a,h)||isRGBColor(a,h,RGBA))&&(g|=0),f+=g;return f}for(let g=0,h=f.length;g<h;g++)f[g]=Interpolation.Utils.CatmullRom(a[g],b[g],c[g],d[g],e,f[g])}else for(const g in f)f[g]=Interpolation.Utils.CatmullRom(a[g],b[g],c[g],d[g],e,f[g]);return f}}}},Store={};function NodeCache(a,b,c){if(!a||!a.nodeType)return b;const d=a.queueID||"q_"+Date.now();a.queueID||(a.queueID=d);const e=Store[d];if(e){if(e.object===b&&a===e.tween.node&&c._startTime===e.tween._startTime)remove(e.tween);else if("object"==typeof b&&!!b&&!!e.object){for(let a in b)a in e.object&&(c._startTime===e.tween._startTime?delete e.object[a]:e.propNormaliseRequired=!0);Object.assign(e.object,b)}return e.object}return"object"==typeof b&&b?(Store[d]={tween:c,object:b,propNormaliseRequired:!1},Store[d].object):b}function Selector(a,b,c){return b?a?"undefined"!=typeof window&&a===window||"undefined"!=typeof document&&a===document?[a]:"string"==typeof a?!!document.querySelectorAll&&document.querySelectorAll(a):Array.isArray(a)?a:a.nodeType?[a]:c?a:[]:null:a?"undefined"!=typeof window&&a===window||"undefined"!=typeof document&&a===document?a:"string"==typeof a?!!document.querySelector&&document.querySelector(a):Array.isArray(a)?a[0]:a.nodeType?a:c?a:null:null}let _id=0;// Unique ID
const defaultEasing=Easing.Linear.None;/**
 * Tween main constructor
 * @constructor
 * @class
 * @namespace TWEEN.Tween
 * @param {Object|Element} node Node Element or Tween initial object
 * @param {Object=} object If Node Element is using, second argument is used for Tween initial object
 * @example let tween = new Tween(myNode, {width:'100px'}).to({width:'300px'}, 2000).start()
 */class Tween{/**
   * Easier way to call the Tween
   * @param {Element} node DOM Element
   * @param {object} object - Initial value
   * @param {object} to - Target value
   * @param {object} params - Options of tweens
   * @example Tween.fromTo(node, {x:0}, {x:200}, {duration:1000})
   * @memberof TWEEN.Tween
   * @static
   */static fromTo(a,b,c,d={}){d.quickRender=d.quickRender?d.quickRender:!c;const e=new Tween(a,b).to(c,d);return d.quickRender&&(e.render().update(e._startTime),e._rendered=!1,e._onStartCallbackFired=!1),e}/**
   * Easier way calling constructor only applies the `to` value, useful for CSS Animation
   * @param {Element} node DOM Element
   * @param {object} to - Target value
   * @param {object} params - Options of tweens
   * @example Tween.to(node, {x:200}, {duration:1000})
   * @memberof TWEEN.Tween
   * @static
   */static to(a,b,c){return Tween.fromTo(a,null,b,c)}/**
   * Easier way calling constructor only applies the `from` value, useful for CSS Animation
   * @param {Element} node DOM Element
   * @param {object} from - Initial value
   * @param {object} params - Options of tweens
   * @example Tween.from(node, {x:200}, {duration:1000})
   * @memberof TWEEN.Tween
   * @static
   */static from(a,b,c){return Tween.fromTo(a,b,null,c)}constructor(a,b){return this.id=_id++,!a||"object"!=typeof a||b||a.nodeType?!!a&&(a.nodeType||a.length||"string"==typeof a)&&(a=this.node=Selector(a),b=this.object=NodeCache(a,b,this)):(b=this.object=a,a=null),this._valuesEnd=null,this._valuesStart=Array.isArray(b)?[]:{},this._duration=1e3,this._easingFunction=defaultEasing,this._easingReverse=defaultEasing,this._interpolationFunction=Interpolation.Linear,this._startTime=0,this._initTime=0,this._delayTime=0,this._repeat=0,this._r=0,this._isPlaying=!1,this._yoyo=!1,this._reversed=!1,this._onStartCallbackFired=!1,this._pausedTime=null,this._isFinite=!0,this._maxListener=15,this._chainedTweensCount=0,this._prevTime=null,this}/**
   * Sets max `event` listener's count to Events system
   * @param {number} count - Event listener's count
   * @memberof TWEEN.Tween
   */setMaxListener(a=15){return this._maxListener=a,this}/**
   * Adds `event` to Events system
   * @param {string} event - Event listener name
   * @param {Function} callback - Event listener callback
   * @memberof TWEEN.Tween
   */on(a,b){const{_maxListener:c}=this;for(let d=0;d<c;d++){const c=a+EVENT_CALLBACK+d;if(!this[c]){this[c]=b;break}}return this}/**
   * Adds `event` to Events system.
   * Removes itself after fired once
   * @param {string} event - Event listener name
   * @param {Function} callback - Event listener callback
   * @memberof TWEEN.Tween
   */once(a,b){const{_maxListener:c}=this;for(let d=0;d<c;d++){const c=a+EVENT_CALLBACK+d;if(!this[c]){this[c]=(...a)=>{b.apply(this,a),this[c]=null};break}}return this}/**
   * Removes `event` from Events system
   * @param {string} event - Event listener name
   * @param {Function} callback - Event listener callback
   * @memberof TWEEN.Tween
   */off(a,b){const{_maxListener:c}=this;for(let d=0;d<c;d++){const c=a+EVENT_CALLBACK+d;this[c]===b&&(this[c]=null)}return this}/**
   * Emits/Fired/Trigger `event` from Events system listeners
   * @param {string} event - Event listener name
   * @memberof TWEEN.Tween
   */emit(a,b,c,d){const{_maxListener:e}=this,f=a+EVENT_CALLBACK;if(!this[f+0])return this;for(let g=0;g<e;g++){const a=f+g;this[a]&&this[a](b,c,d)}return this}/**
   * @return {boolean} State of playing of tween
   * @example tween.isPlaying() // returns `true` if tween in progress
   * @memberof TWEEN.Tween
   */isPlaying(){return this._isPlaying}/**
   * @return {boolean} State of started of tween
   * @example tween.isStarted() // returns `true` if tween in started
   * @memberof TWEEN.Tween
   */isStarted(){return this._onStartCallbackFired}/**
   * Reverses the tween state/direction
   * @example tween.reverse()
   * @param {boolean=} state Set state of current reverse
   * @memberof TWEEN.Tween
   */reverse(a){const{_reversed:b}=this;return this._reversed=void 0===a?!b:a,this}/**
   * @return {boolean} State of reversed
   * @example tween.reversed() // returns `true` if tween in reversed state
   * @memberof TWEEN.Tween
   */reversed(){return this._reversed}/**
   * Pauses tween
   * @example tween.pause()
   * @memberof TWEEN.Tween
   */pause(){return this._isPlaying?(this._isPlaying=!1,remove(this),this._pausedTime=now(),this.emit(EVENT_PAUSE,this.object)):this}/**
   * Play/Resume the tween
   * @example tween.play()
   * @memberof TWEEN.Tween
   */play(){return this._isPlaying?this:(this._isPlaying=!0,this._startTime+=now()-this._pausedTime,this._initTime=this._startTime,add(this),this._pausedTime=now(),this.emit(EVENT_PLAY,this.object))}/**
   * Restarts tween from initial value
   * @param {boolean=} noDelay If this param is set to `true`, restarts tween without `delay`
   * @example tween.restart()
   * @memberof TWEEN.Tween
   */restart(a){return this._repeat=this._r,this.reassignValues(),add(this),this.emit(EVENT_RESTART,this.object)}/**
   * Seek tween value by `time`. Note: Not works as excepted. PR are welcome
   * @param {Time} time Tween update time
   * @param {boolean=} keepPlaying When this param is set to `false`, tween pausing after seek
   * @example tween.seek(500)
   * @memberof TWEEN.Tween
   * @deprecated Not works as excepted, so we deprecated this method
   */seek(a,b){const{_duration:c,_initTime:d,_startTime:e,_reversed:f}=this;return this._isPlaying=!0,d+a<e&&e>=d&&(this._startTime-=c,this._reversed=!f),this.update(a,!1),this.emit(EVENT_SEEK,a,this.object),b?this:this.pause()}/**
   * Sets tween duration
   * @param {number} amount Duration is milliseconds
   * @example tween.duration(2000)
   * @memberof TWEEN.Tween
   * @deprecated Not works as excepted and useless, so we deprecated this method
   */duration(a){return this._duration="function"==typeof a?a(this._duration):a,this}/**
   * Sets target value and duration
   * @param {object} properties Target value (to value)
   * @param {number|Object=} [duration=1000] Duration of tween
   * @example let tween = new Tween({x:0}).to({x:100}, 2000)
   * @memberof TWEEN.Tween
   */to(a,b=1e3,c){if(this._valuesEnd=a,"number"==typeof b||"function"==typeof b)this._duration="function"==typeof b?b(this._duration):b;else if("object"==typeof b)for(const a in b)if("function"==typeof this[a]){const[c=null,d=null,e=null,f=null]=Array.isArray(b[a])?b[a]:[b[a]];this[a](c,d,e,f)}return this}/**
   * Renders and computes value at first render
   * @private
   * @memberof TWEEN.Tween
   */render(){if(this._rendered)return this;let{_valuesStart:a,_valuesEnd:b,object:c,node:d,InitialValues:e}=this;if(SET_NESTED(c),SET_NESTED(b),d&&d.queueID&&Store[d.queueID]){const a=Store[d.queueID];if(a.propNormaliseRequired&&a.tween!==this){for(const c in b)if(void 0!==a.tween._valuesEnd[c]);a.normalisedProp=!0,a.propNormaliseRequired=!1}}if(d&&e&&(c&&0!==Object.keys(c).length?(!b||0===Object.keys(b).length)&&(b=this._valuesEnd=e(d,c)):c=this.object=NodeCache(d,e(d,b),this)),!a.processed){for(const d in b){let e=c&&c[d]&&deepCopy(c[d]),f=b[d];if(!(Plugins[d]&&Plugins[d].init&&(Plugins[d].init.call(this,e,f,d,c),void 0===e&&a[d]&&(e=a[d]),Plugins[d].skipProcess))&&!("number"==typeof e&&isNaN(e)||null===e||null===f||!1===e||!1===f||void 0===e||void 0===f||e===f)){if(a[d]=e,!Array.isArray(f))decompose(d,c,a,b);else if(!Array.isArray(e)){f.unshift(e);for(let a=0,b=f.length;a<b;a++)"string"==typeof f[a]&&(f[a]=decomposeString(f[a]))}else f.isString&&c[d].isString&&!e.isString?e.isString=!0:decompose(d,c,a,b);"number"!=typeof e||"string"!=typeof f||"="!==f[1]}}a.processed=!0}return Tween.Renderer&&this.node&&Tween.Renderer.init&&(Tween.Renderer.init.call(this,c,a,b),this.__render=!0),this._rendered=!0,this}/**
   * Start the tweening
   * @param {number|string} time setting manual time instead of Current browser timestamp or like `+1000` relative to current timestamp
   * @example tween.start()
   * @memberof TWEEN.Tween
   */start(a){return this._startTime=void 0===a?now():"string"==typeof a?now()+parseFloat(a):a,this._startTime+=this._delayTime,this._initTime=this._prevTime=this._startTime,this._onStartCallbackFired=!1,this._rendered=!1,this._isPlaying=!0,add(this),this}/**
   * Stops the tween
   * @example tween.stop()
   * @memberof TWEEN.Tween
   */stop(){let{_isPlaying:a,_isFinite:b,object:c,_startTime:d,_duration:e,_r:f,_yoyo:g,_reversed:h}=this;if(!a)return this;let j=b?1==(f+1)%2:!h;return this._reversed=!1,g&&j?this.update(d):this.update(d+e),remove(this),this.emit(EVENT_STOP,c)}/**
   * Set delay of tween
   * @param {number} amount Sets tween delay / wait duration
   * @example tween.delay(500)
   * @memberof TWEEN.Tween
   */delay(a){return this._delayTime="function"==typeof a?a(this._delayTime):a,this}/**
   * Chained tweens
   * @param {any} arguments Arguments list
   * @example tween.chainedTweens(tween1, tween2)
   * @memberof TWEEN.Tween
   */chainedTweens(){if(this._chainedTweensCount=arguments.length,!this._chainedTweensCount)return this;for(let a=0,b=this._chainedTweensCount;a<b;a++)this[CHAINED_TWEENS+a]=arguments[a];return this}/**
   * Sets how times tween is repeating
   * @param {amount} amount the times of repeat
   * @example tween.repeat(5)
   * @memberof TWEEN.Tween
   */repeat(a){return this._repeat=this._duration?"function"==typeof a?a(this._repeat):a:0,this._r=this._repeat,this._isFinite=isFinite(a),this}/**
   * Set delay of each repeat alternate of tween
   * @param {number} amount Sets tween repeat alternate delay / repeat alternate wait duration
   * @example tween.reverseDelay(500)
   * @memberof TWEEN.Tween
   */reverseDelay(a){return this._reverseDelayTime="function"==typeof a?a(this._reverseDelayTime):a,this}/**
   * Set `yoyo` state (enables reverse in repeat)
   * @param {boolean} state Enables alternate direction for repeat
   * @param {Function=} _easingReverse Easing function in reverse direction
   * @example tween.yoyo(true)
   * @memberof TWEEN.Tween
   */yoyo(a,b){return this._yoyo="function"==typeof a?a(this._yoyo):null===a?this._yoyo:a,a||(this._reversed=!1),this._easingReverse=b||null,this}/**
   * Set easing
   * @param {Function} _easingFunction Easing function, applies in non-reverse direction if Tween#yoyo second argument is applied
   * @example tween.easing(Easing.Elastic.InOut)
   * @memberof TWEEN.Tween
   */easing(a){return this._easingFunction=a,this}/**
   * Set interpolation
   * @param {Function} _interpolationFunction Interpolation function
   * @example tween.interpolation(Interpolation.Bezier)
   * @memberof TWEEN.Tween
   */interpolation(a){return"function"==typeof a&&(this._interpolationFunction=a),this}/**
   * Reassigns value for rare-case like Tween#restart or for Timeline
   * @private
   * @memberof TWEEN.Tween
   */reassignValues(a){const{_valuesStart:b,object:c,_delayTime:d}=this;for(const e in this._isPlaying=!0,this._startTime=void 0===a?now():a,this._startTime+=d,this._reversed=!1,add(this),b){const a=b[e];c[e]=a}return this}/**
   * Updates initial object to target value by given `time`
   * @param {Time} time Current time
   * @param {boolean=} preserve Prevents from removing tween from store
   * @param {boolean=} forceTime Forces to be frame rendered, even mismatching time
   * @example tween.update(100)
   * @memberof TWEEN.Tween
   */update(a,b,c){let d,e,f,{_onStartCallbackFired:g,_easingFunction:h,_interpolationFunction:j,_easingReverse:k,_repeat:l,_delayTime:m,_reverseDelayTime:n,_yoyo:o,_reversed:p,_startTime:q,_prevTime:r,_duration:s,_valuesStart:t,_valuesEnd:u,object:v,_isFinite:w,_isPlaying:x,__render:y,_chainedTweensCount:z}=this,A=0;if(!s)d=1,l=0;else{a=void 0===a?now():a;let b=a-r;if(this._prevTime=a,b>TOO_LONG_FRAME_MS&&isRunning()&&isLagSmoothing()&&(a-=b-FRAME_MS),!x||a<q&&!c)return!0;d=(a-q)/s,d=1<d?1:d,d=p?1-d:d}if(g||(!this._rendered&&(this.render(),this._rendered=!0),this.emit(EVENT_START,v),this._onStartCallbackFired=!0),e=p?k||h:h,!v)return!0;for(f in u){const a=t[f];if((void 0===a||null===a)&&!(Plugins[f]&&Plugins[f].update))continue;const b=u[f],c=e[f]?e[f](d):"function"==typeof e?e(d):defaultEasing(d),g=j[f]?j[f]:"function"==typeof j?j:Interpolation.Linear;"number"==typeof b?v[f]=a+(b-a)*c:!Array.isArray(b)||b.isString||Array.isArray(a)?b&&b.update?b.update(c):"function"==typeof b?v[f]=b(c):"string"==typeof b&&"number"==typeof a?v[f]=a+parseFloat(b[0]+b.substr(2))*c:recompose(f,v,t,u,c,d):v[f]=g(b,c,v[f]),Plugins[f]&&Plugins[f].update&&Plugins[f].update.call(this,v[f],a,b,c,d,f),A++}if(!A)return remove(this),!1;if(y&&Tween.Renderer&&Tween.Renderer.update&&Tween.Renderer.update.call(this,v,d),this.emit(EVENT_UPDATE,v,d,a),1===d||p&&0===d){if(0<l&&0<s){if(w&&this._repeat--,o)this._reversed=!p;else for(f in u){let a=u[f];"string"==typeof a&&"number"==typeof t[f]&&(t[f]+=parseFloat(a[0]+a.substr(2)))}return this.emit(o&&!p?EVENT_REVERSE:EVENT_REPEAT,v),this._startTime=p&&n?a-n:a+m,!0}if(b||(this._isPlaying=!1,remove(this),_id--),this.emit(EVENT_COMPLETE,v),this._repeat=this._r,z)for(let b=0;b<z;b++)this[CHAINED_TWEENS+b].start(a+s);return!1}return!0}}function extract(a,b){return Object.keys(b).reduce(function(b,c){return b[c]=a[c],b},{})}autoPlay(!0);function index(a){var b=a.Sprite,c=a.AnimatedSprite,d=a.Text,e=a.Graphics,f=a.Container;[b,c,d,e,f].map(function(a){a.prototype.animate=function(a){void 0===a&&(a={});var b=this,c=a.to,d=void 0===c?{}:c,e=a.easing,f=void 0===e?Easing.Linear.None:e,g=a.duration,h=void 0===g?300:g,j=a.reverse,k=a.repeat,l=void 0===k?0:k,m=a.on,n=void 0===m?{start:function(){},update:function(){},complete:function(){},reverse:function(){},restart:function(){},play:function(){},stop:function(){}}:m,o=new Tween(extract(b,d)).to(d,h).easing(f).repeat(l).reverse(void 0!==j&&j).on("start",n.start).on("update",function(a){b=Object.assign(b,a),n.update(a)}).on("complete",n.complete).on("reverse",n.reverse).on("restart",n.restart).on("play",n.play).on("stop",n.stop).start();return o}})}export default index;
//# sourceMappingURL=animate.es.min.js.map
